PROGRAM_NAME='Tesira_Phone2'

(***********************************************************)
(***********************************************************)
(*  FILE_LAST_MODIFIED_ON: 06/10/2020  AT: 10:34:34        *)
(***********************************************************)
(* System Type : NetLinx                                   *)
(***********************************************************)
(* REV HISTORY:                                            *)
(***********************************************************)
(*
    $History: $
    Notes
	https://support.biamp.com/Tesira/Control/Tesira_command_string_calculator
	
	?? RIBED$0D$0A - Returning Feedback
	
	"'DEVICE get ipStatus control',13"
	
	Output 1 = Vadio..
	Output 2 = Ceiling...
	Output 4 = Front Speakers
	
*)
(***********************************************************)
(*          DEVICE NUMBER DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_DEVICE

#IF_NOT_DEFINED dvTP_Biamp
dvTP_Biamp =					10001:5:0
#END_IF

#IF_NOT_DEFINED dvTP_Biamp2
dvTP_Biamp2 =					10002:5:0
#END_IF

#IF_NOT_DEFINED dvTesira
dvTesira =						5001:3:0 
#END_IF


(***********************************************************)
(*               CONSTANT DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_CONSTANT


#IF_NOT_DEFINED CR
CR				= 13
#END_IF

#IF_NOT_DEFINED LF
LF				= 10
#END_IF


MAX_COMP				= 88
MAX_SPAN				= 6
PHONE_ID			= 1 ////Phone Block ID (Typcially should be 1)

VOL_UP				= 1
VOL_DN				= -1


TXT_PRGM				= 10
TXT_CALLER				= 11

TXT_MYPHONE			= 20
TXT_SIPDISAPLAY_NAME	= 22
TXT_CID_NUMBER			= 19
TXT_CID_NAME			= 18
TXT_PHONE_STATE			= 21
TXT_NUMBER_DISPLAY		= 17

YES_ON					= 'true'
YES_OFF					= 'false'

TAG_PRGM				= 'Program'
TAG_CEILING				= 'privacymute'
TAG_CALLING				= 'Calling' //For Phone call Subscription...

ID_PROGRAM				= 1
ID_CEILING				= 1 //Logic Block

//Buttons...
BTN_MUTE_PRGM			= 37
BTN_MUTE_CEILING		= 50
BTN_DISTURB				= 26 //Toggle Disturb on or Off

(***********************************************************)
(*               VARIABLE DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_VARIABLE

VOLATILE CHAR nBiampDevice[30] = 'Tesira VT'
VOLATILE CHAR nSipNumber[10] //= Holds Sip Number in Voip Settings..
VOLATILE CHAR nSipName[15] //Holds Display Name in Voip Settings
VOLATILE CHAR dialPhone[20] //Dialer1
VOLATILE CHAR sLastNumber[20]
VOLATILE CHAR sIncomingCall[20]
VOLATILE INTEGER nPhoneState //On / Off
VOLATILE INTEGER nSubscribed;
VOLATILE CHAR bFound[15];

VOLATILE INTEGER nBiampOnline
VOLATILE CHAR nBiampBuffer[2500];

//Program
VOLATILE INTEGER nProgram_Mute
VOLATILE SINTEGER nProgram_Preset = -15 //Set Default Level
VOLATILE SINTEGER nProgram_Level //Caller + Speakers

VOLATILE INTEGER nCeiling_Mute //Ceiling Mics
VOLATILE INTEGER nDoNotDisturb_

//Biamp Level Ranges...
VOLATILE SINTEGER nMaximum = 12 //Max...
VOLATILE SINTEGER nMinimum = -88 //Minimum...

VOLATILE DEV vdvTP_Biamp[] = 
{
    dvTP_Biamp, 
    dvTP_Biamp2
}
VOLATILE INTEGER nPrgmChnlbtns[] =
{
    //Program...
    37,38,39,40
}

(***********************************************************)
(*        SUBROUTINE/FUNCTION DEFINITIONS GO BELOW         *)
(***********************************************************)
(* EXAMPLE: DEFINE_FUNCTION <RETURN_TYPE> <NAME> (<PARAMETERS>) *)
(* EXAMPLE: DEFINE_CALL '<NAME>' (<PARAMETERS>) *)  
DEFINE_FUNCTION fnMuteLogic(CHAR cTag[], INTEGER cIn, CHAR cToggle[MAX_SPAN])
{
    SEND_STRING dvTesira, "cTag,' set state ',ITOA(cIn),' ',cToggle,CR" 
}
DEFINE_FUNCTION fnMuteVolume(CHAR cTag[], INTEGER cIn, CHAR cValue[MAX_SPAN]) 
{
    SEND_STRING dvTesira, "cTag,' set mute ',ITOA(cIn),' ',cValue,CR"
}
DEFINE_FUNCTION fnSetVolumeUp(CHAR cTag[], INTEGER cIn, SINTEGER cVolume)
{
    IF (cVolume < nMaximum )
    {
	SEND_STRING dvTesira, "cTag,' set level ',ITOA(cIn),' ',ITOA(cVolume + VOL_UP),CR"
    }
}
DEFINE_FUNCTION fnSetVolumeDown(CHAR cTag[], INTEGER cIn, SINTEGER cVolume)
{
    IF (cVolume > nMinimum )
    {
	SEND_STRING dvTesira, "cTag,' set level ',ITOA(cIn),' ',ITOA(cVolume + VOL_DN),CR"
    }
}
DEFINE_FUNCTION fnSetVolumePreset(CHAR cTag[], INTEGER cIn, SINTEGER cLevel)
{
    SEND_STRING dvTesira, "cTag,' set level ',ITOA(cIn),' ',ITOA(cLevel),CR"
}
DEFINE_FUNCTION fnNoDisturb(CHAR cValue[MAX_SPAN])
{
    SEND_STRING dvTesira, "'VoIPControlStatus1 set dndEnable 1 ',cValue,CR"
    WAIT 10
    {
	SEND_STRING dvTesira, "'VoIPControlStatus1 get dndEnable 1',CR"
    }
}
DEFINE_FUNCTION fnGetValues()
{
    WAIT 10 fnSetVolumePreset(TAG_PRGM, ID_PROGRAM, nProgram_Preset)
    WAIT 20 fnMuteVolume(TAG_PRGM, ID_PROGRAM, YES_OFF)
    WAIT 30 fnMuteLogic(TAG_CEILING, ID_CEILING, YES_OFF)
    WAIT 40 fnNoDisturb (YES_OFF)
    
    WAIT 60 SEND_STRING dvTesira, "'VoIPControlStatus1 get protocols',CR"

    WAIT 120 fnSubscribeCalls();
}
DEFINE_FUNCTION fnSubscribeCalls()
{
    IF (nSubscribed == FALSE)
    {
	SEND_STRING dvTesira, "'VoIPControlStatus1 subscribe callState ',TAG_CALLING,CR"
	    WAIT 50 SEND_STRING dvTesira, "'VoIPControlStatus1 get callState',CR"
    }
    ELSE
    {
	SEND_STRING dvTesira, "'VoIPControlStatus1 get callState',CR"
    }
}
DEFINE_FUNCTION fnParseTesira()
{
    STACK_VAR CHAR cResponse[2500]
    LOCAL_VAR CHAR cRemoteNum[10]//Caller's Number (incoming/Outgoing)
    LOCAL_VAR CHAR cRemoteID[30] //Caller's Name Info
    STACK_VAR CHAR cDisplayName[50]; //Pull Room Name
    LOCAL_VAR CHAR cCallState[4]; //RING,IDLE,DIAL,
    LOCAL_VAR CHAR cVoipStatus[4];
    LOCAL_VAR CHAR cState[5];
    
    WHILE (FIND_STRING(nBiampBuffer,"$0D,$0A",1))
    {	
	cResponse = REMOVE_STRING(nBiampBuffer,"$0D,$0A",1)
    
	SELECT
	{
	    ACTIVE (FIND_STRING(cResponse,'Welcome to the Tesira Text Protocol Server. . .',1)):
	    {
		SEND_STRING 0, "'Tesira has booted and now Ready'"
			//Load Presets....
			    fnGetValues()
	    }
	    ACTIVE (FIND_STRING (cResponse,'VoIPControlStatus1 get dndEnable 1',1)):
	    {
		bFound = 'donotDisturb';
	    }
	    ACTIVE (FIND_STRING(cResponse,'"channelProtoSipInfo":[{"sipUser":"',1)): //Pull SIP Number + Must be Subscribed to see this!
	    {
		REMOVE_STRING(cResponse,'"channelProtoSipInfo":[{"sipUser":"',1) //Left with... 4048943212" "sipDisplayName":"Coda C0915" "sipDomain":"
		nSipNumber = LEFT_STRING(cResponse,10) //Pull Number Only...
		
		REMOVE_STRING(cResponse,'" "sipDisplayName":"',1) //Left with.... Coda C0915" "sipDomain":"
		    cDisplayName = REMOVE_STRING (cResponse,'" "sipDomain":"',1) //Capture Only.... Coda C0915" "sipDomain":"
			nSipName = LEFT_STRING (cDisplayName, LENGTH_STRING (cDisplayName) - 15); //Remove all the tail end...
		
		    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_MYPHONE),',0,',nSipNumber"
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_SIPDISAPLAY_NAME),',0,',nSipName"
	    }
	    ACTIVE(FIND_STRING(cResponse,'VoIPControlStatus1 ',1)):
	    {
		REMOVE_STRING(cResponse,'VoIPControlStatus1 ',1)
		cVoipStatus = LEFT_STRING (cResponse,4);
		
		SWITCH (cVoipStatus)
		{
		    CASE 'dial' :
		    {
			nPhoneState = TRUE;
			    //dial 1 1 96789929391$0D$0A] --> Could Strip this if we wanted...but already parsing somewhere else...
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Connecting'"
		    }
		    CASE 'end ' :
		    {
			nPhoneState = FALSE;
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Disconnected'"
		    }
		    CASE 'answ' :
		    {
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Connected'"
			    nPhoneState = TRUE;
		    }
		} 
	    }
	    ACTIVE (FIND_STRING(cResponse,'-ERR ALREADY_SUBSCRIBED',1)):
	    {
		nSubscribed = TRUE;
	    }
	    ACTIVE(FIND_STRING(cResponse,"'! "publishToken":"',TAG_CALLING,'" "value":{"callStateInfo":[{"state":VOIP_CALL_STATE_'",1)): //UPDATED!!!!
	    {
		REMOVE_STRING (cResponse,"'! "publishToken":"',TAG_CALLING,'" "value":{"callStateInfo":[{"state":VOIP_CALL_STATE_'",1)
		cCallState = LEFT_STRING(cResponse,4)
		
		SWITCH (cCallState)
		{
		    CASE 'RING' :
		    {
			SEND_COMMAND vdvTP_Biamp, "'@PPX'"
			    SEND_COMMAND vdvTP_Biamp, "'PPON-_Phone'" //Show Caller PopuP
				SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Incoming Call'"
			
			REMOVE_STRING (cResponse, '"cid":"\"',1) //Left with -->04011103\"\"6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			REMOVE_STRING(cResponse,'\"\"',1) //Should be left with --> 6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			cRemoteNum = LEFT_STRING (cResponse, 10) //Just get 10 digit phone number
			REMOVE_STRING(cResponse, '\"\"',1) //Should be left with --> Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			cRemoteID = REMOVE_STRING (cResponse,'\"" "prompt":',1)
			    cRemoteID = LEFT_STRING (cRemoteID, LENGTH_STRING (cRemoteID) -13); //Remove Tail and grab pre
			
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NUMBER),',0,',cRemoteNum" //Place the Number
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NAME),',0,',cRemoteID" //Place the Name...
		    }
		    CASE 'DIAL' : //Dialing...
		    {
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Connecting'"
			    nPhoneState = TRUE;
		    }
		    CASE 'IDLE' :
		    {
			    nPhoneState = FALSE;
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Disconnected'"
			
			cRemoteNum = 'Caller ID';
			cRemoteID = 'Phone Number';
			
			 WAIT 100
			 {
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NUMBER),',0,',cRemoteNum" //Place the Number
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NAME),',0,',cRemoteID" //Place the Name...
			}
		    }
		    CASE 'ACTI' : //ACTIVE...
		    {
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Connected'"
			nPhoneState = TRUE;
			//REMOVE_STRING (cResponse, '"cid":"\"',1) //Left with -->04011103\"\"6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			//REMOVE_STRING(cResponse,'\"\"',1) //Should be left with --> 6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			//RemoteNum = REMOVE_STRING (cResponse, '\"\"\"" "prompt":',1)
			   // cRemoteNum = LEFT_STRING (cRemoteNum, LENGTH_STRING (cRemoteNum) -17); //Remove Tail and grab pre
			IF (LENGTH_STRING (dialPhone) > 0) //Must of Dialed Out..
			{
			   // cRemoteNum = dialPhone;
			     SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NUMBER),',0,',dialPhone" //Place the Number
			}
		    }
		    CASE 'ANSW' : //ANSWER_CALL
		    {
			nPhoneState = TRUE;
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PHONE_STATE),',0,Connected'"

			REMOVE_STRING (cResponse, '"cid":"\"',1) //Left with -->04011103\"\"6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			REMOVE_STRING(cResponse,'\"\"',1) //Should be left with --> 6789929391\"\"Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			cRemoteNum = LEFT_STRING (cResponse, 10) //Just get 10 digit phone number
			REMOVE_STRING(cResponse, '\"\"',1) //Should be left with --> Wireless Caller\"" "prompt":VOIP_PROMPT_INCOMING_CALL_FROM
			
			cRemoteID = REMOVE_STRING (cResponse, '\"" "prompt":',1)
			   cRemoteID = LEFT_STRING (cRemoteID, LENGTH_STRING (cRemoteID) -13); //Remove Tail and grab pre
			
			    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NUMBER),',0,',cRemoteNum" //Place the Number
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_CID_NAME),',0,',cRemoteID" //Place the Name...
		    }
		}
	    }
	    ACTIVE (FIND_STRING (cResponse,'+OK "value":',1)) :
	    {
		REMOVE_STRING (cResponse,'+OK "value":',1)
	    
		SWITCH (bFound)
		{
		    CASE 'donotDisturb' :
		    {
			IF (FIND_STRING(cResponse,'false',1))
			{
			    nDoNotDisturb_ = FALSE;
				OFF [vdvTP_Biamp, BTN_DISTURB]
				    bFound = '';
			}
			ELSE
			{
			    nDoNotDisturb_ = TRUE;
				ON [vdvTP_Biamp, BTN_DISTURB]
				    bFound = '';
			}
		    }
		}
	    }
	    ACTIVE (FIND_STRING (cResponse, "TAG_PRGM,' set mute ',ITOA(ID_PROGRAM),' '",1)) :
	    {
		REMOVE_STRING (cResponse, "TAG_PRGM,' set mute ',ITOA(ID_PROGRAM),' '",1)
		cState = cResponse;
		
		    IF (FIND_STRING (cState,'true',1))
		    {
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PRGM),',0,Muted'"
			    ON [vdvTP_Biamp, BTN_MUTE_PRGM]
				ON [nProgram_Mute]
		    }
		    ELSE
		    {
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PRGM),',0,',ITOA(nProgram_Level + MAX_COMP),'%'"
			    OFF [vdvTP_Biamp, BTN_MUTE_PRGM]
				OFF [nProgram_Mute]
		    }
	    }
	    //Program Levels...
	    ACTIVE (FIND_STRING(cResponse,"TAG_PRGM,' set level ',ITOA(ID_PROGRAM)",1)):
	    {
		REMOVE_STRING(cResponse,"TAG_PRGM,' set level ',ITOA(ID_PROGRAM)",1)
		    nProgram_Level = ATOI(cResponse)
			SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_PRGM),',0,',ITOA(nProgram_Level + MAX_COMP),'%'"
	    }
	    ACTIVE (FIND_STRING (cResponse, "TAG_CEILING,' set state ',ITOA(ID_CEILING),' '",1)) :
	    {
		REMOVE_STRING (cResponse, "TAG_CEILING,' set state ',ITOA(ID_CEILING),' '",1)
		cState = cResponse;
		
		IF (FIND_STRING (cState,'true',1))
		{
		    ON [nCeiling_Mute]
			ON [vdvTP_Biamp, BTN_MUTE_CEILING]
		}
		ELSE
		{
		    OFF [nCeiling_Mute]
			OFF [vdvTP_Biamp, BTN_MUTE_CEILING]
		}
	    }
	}
    }
}

(***********************************************************)
(*                STARTUP CODE GOES BELOW                  *)
(***********************************************************)
DEFINE_START

ON [nBiampOnline]
CREATE_BUFFER dvTesira,nBiampBuffer;


WAIT 600 //1 Minute
{
    OFF [nBiampOnline]
}

(***********************************************************)
(*                THE EVENTS GO BELOW                      *)
(***********************************************************)
DEFINE_EVENT
BUTTON_EVENT [vdvTP_Biamp, 1]
BUTTON_EVENT [vdvTP_Biamp, 2]
BUTTON_EVENT [vdvTP_Biamp, 3]
BUTTON_EVENT [vdvTP_Biamp, 4]
BUTTON_EVENT [vdvTP_Biamp, 5]
BUTTON_EVENT [vdvTP_Biamp, 6]
BUTTON_EVENT [vdvTP_Biamp, 7]
BUTTON_EVENT [vdvTP_Biamp, 8]
BUTTON_EVENT [vdvTP_Biamp, 9]
BUTTON_EVENT [vdvTP_Biamp, 10]
BUTTON_EVENT [vdvTP_Biamp, 11] 
BUTTON_EVENT [vdvTP_Biamp, 12] //Dial Pad...
{                                    
    PUSH :
    {
	STACK_VAR INTEGER nPhoneBtns
	STACK_VAR CHAR nDigit[1];
	
	nPhoneBtns = BUTTON.INPUT.CHANNEL - 1;

	TO[BUTTON.INPUT];
	
	SWITCH (nPhoneBtns)
	{
	    CASE 10:
	    {
		nDigit = '*';
		BREAK;
	    }
	    CASE 11:
	    {
		nDigit = '#';
		BREAK;
	    }
	    DEFAULT:
	    {
		nDigit = ITOA (nPhoneBtns);
		BREAK;
	    }
	}
	dialPhone = "dialPhone, nDigit"
	
	IF (nPhoneState == TRUE)
	{
	    SEND_STRING dvTesira, "'VoIPControlStatus1 dtmf  1 ',nDigit,CR"
	}
	
	SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_NUMBER_DISPLAY),',0,',dialPhone";
    }
}
BUTTON_EVENT [vdvTP_Biamp, 13] //BackSpace...
{
    PUSH :
    {
	IF (LENGTH_STRING(dialPhone))
	{
	    TO[BUTTON.INPUT];
	    SET_LENGTH_STRING(dialPhone,LENGTH_STRING(dialPhone) -1);
	    SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_NUMBER_DISPLAY),',0,',dialPhone";
	}
    }
}
BUTTON_EVENT [vdvTP_Biamp, 14] //Clear...
{
    PUSH :
    {
	dialPhone = "";
	SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_NUMBER_DISPLAY),',0,',dialPhone";
    }
}
BUTTON_EVENT [vdvTP_Biamp, 15] //Dial...
{
    PUSH :
    {
	IF (LENGTH_STRING (dialPhone) > 0)
	{
	    TO[BUTTON.INPUT]
	    SEND_STRING dvTesira, "'VoIPControlStatus1 dial 1 1 ',dialPhone,CR"
	}
    }
}
BUTTON_EVENT [vdvTP_Biamp, 16] //Redial...
{
    PUSH :
    {
	TO[BUTTON.INPUT]
	SEND_STRING dvTesira, "'VoIPControlStatus1 redial 1 1',CR"
    }
}
BUTTON_EVENT [vdvTP_Biamp, 17] //HangUp...
{
    PUSH :
    {
	TO[BUTTON.INPUT]
	SEND_STRING dvTesira, "'VoIPControlStatus1 end 1 1 ',CR"
	OFF [nPhoneState]
    }
}
BUTTON_EVENT [vdvTP_Biamp, 18] //Answer...
{
    PUSH :
    {
	TO[BUTTON.INPUT]
	SEND_STRING dvTesira, "'VoIPControlStatus1 answer 1 1 ',CR"
	ON [nPhoneState]
    }
}
BUTTON_EVENT [vdvTP_Biamp, 19] //Ignore Call
{
    PUSH :
    {
	TO[BUTTON.INPUT]
	SEND_STRING dvTesira, "'VoIPControlStatus1 answer 1 1 ',CR"
	WAIT 10
	{
	   SEND_STRING dvTesira, "'VoIPControlStatus1 end 1 1 ',CR"
	}
    }
}
BUTTON_EVENT [vdvTP_Biamp, nPrgmChnlbtns]
{
    PUSH :
    {
	STACK_VAR INTEGER nChnlIdx;
	
	nChnlIdx = GET_LAST (nPrgmChnlbtns)
	SWITCH (nChnlIdx)
	{
	    //Program
	    CASE 1 :
	    {
		IF (nProgram_Mute == FALSE)
		{
		    fnMuteVolume(TAG_PRGM, ID_PROGRAM, YES_ON)
		}
		ELSE
		{
		    fnMuteVolume(TAG_PRGM, ID_PROGRAM, YES_OFF)
		}
	    }
	    CASE 2 : fnSetVolumeUp(TAG_PRGM, ID_PROGRAM, nProgram_Level)
	    CASE 3 : fnSetVolumeDown(TAG_PRGM, ID_PROGRAM, nProgram_Level)
	    CASE 4 : fnSetVolumePreset(TAG_PRGM, ID_PROGRAM, nProgram_Preset)
	}
    }
    HOLD [2, REPEAT] :
    {
	STACK_VAR INTEGER nChnlIdx
	
	nChnlIdx = GET_LAST (nPrgmChnlbtns)
	SWITCH (nChnlIdx)
	{
	    CASE 2 : fnSetVolumeUp(TAG_PRGM, ID_PROGRAM, nProgram_Level)
	    CASE 3 : fnSetVolumeDown(TAG_PRGM, ID_PROGRAM, nProgram_Level)
	}
    }
}
BUTTON_EVENT [vdvTP_Biamp, BTN_MUTE_CEILING]
{
    PUSH :
    {
	IF (nCeiling_Mute == FALSE)
	{
	    fnMuteLogic(TAG_CEILING, ID_CEILING, YES_ON)
	}
	ELSE
	{
	    fnMuteLogic(TAG_CEILING, ID_CEILING, YES_OFF)
	}
    }
}
BUTTON_EVENT [vdvTP_Biamp, BTN_DISTURB]
{
    PUSH :
    {
	IF (nDoNotDisturb_ == FALSE)
	{
	    fnNoDisturb (YES_ON)
	}
	ELSE
	{
	    fnNoDisturb (YES_OFF)
	}
    }
}

DEFINE_EVENT
DATA_EVENT [dvTP_Biamp]
DATA_EVENT [dvTP_Biamp2]
{
    ONLINE:
    {
	SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_MYPHONE),',0,',nSipNumber"
	SEND_COMMAND vdvTP_Biamp, "'^TXT-',ITOA(TXT_SIPDISAPLAY_NAME),',0,',nSipName"
    }
}
DATA_EVENT [dvTesira]
{
    ONLINE:
    {
	    SEND_COMMAND DATA.DEVICE, "'SET BAUD 115200,N,8,1'"
	    SEND_COMMAND DATA.DEVICE, "'RXON'"
	    SEND_COMMAND DATA.DEVICE, "'HSOFF'"
	    
	    WAIT 100
	    {
		   fnGetValues()
	    }
    }
    STRING:
    {
	fnParseTesira()
    }
}

DEFINE_EVENT
TIMELINE_EVENT[TL_FEEDBACK]
{
    WAIT 1800 //3Minutes...
    {
	SEND_STRING dvTesira, "'VoIPControlStatus1 get protocols',CR"
    }
    WAIT 3600 //6 Minutes...
    {
	fnSubscribeCalls()
    }

}
(***********************************************************)
(*            THE ACTUAL PROGRAM GOES BELOW                *)
(***********************************************************)

